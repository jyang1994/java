<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--推荐使用 类似类的完全限定名-->
<mapper namespace="com.kaishengit.mapper.UserMapper">

    <cache/>
    <!--
    id:唯一，最好写成类似于方法名
    parameterType : 参数类型 一个参数的情况下可以省略
    resultType: 返回值类型
    -->
    <select id="findById" parameterType="int" resultMap="userMap" useCache="false">
          select * from t_user WHERE  id = #{id}
    </select>

    <!--设置对应关系-->
    <resultMap id="userMap" type="com.kaishengit.entity.User">
        <id column="id" property="id"/>
        <result column="user_name" property="userName"/>
        <result column="address" property="address"/>
        <result column="tel" property="tel"/>
    </resultMap>

    <select id="findAll" resultType="User">
          select * from t_user
    </select>

    <select id="page" resultType="User" parameterType="map">
        select * from t_user limit #{start}, #{size}
    </select>

    <select id="page2" resultType="User">
        select * from t_user limit #{param1}, #{param2}
    </select>

    <select id="page3" resultType="User">
        select * from t_user limit #{start}, #{size}
    </select>

    <insert id="save" parameterType="User" useGeneratedKeys="true" keyProperty="id">
        insert into t_user (user_name, address, tel) values (#{userName}, #{address}, #{tel});
    </insert>

    <update id="update" parameterType="User">
        update t_user set user_name = #{userName} , address = #{address}, tel = #{tel}
        where id = #{id}

    </update>
    
    <delete id="delById" flushCache="false">
        delete from t_user where id = #{id}
    </delete>

</mapper>